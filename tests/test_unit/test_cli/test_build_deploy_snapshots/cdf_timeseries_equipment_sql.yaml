DataSet:
- description: Transformations for contextualisations
  externalId: contextualisation_transformations
  metadata: {}
  name: Contextualisation Transformations
  writeProtected: false
Group:
- capabilities:
  - projectsAcl:
      actions:
      - READ
      - LIST
      scope:
        all: {}
  - groupsAcl:
      actions:
      - LIST
      scope:
        all: {}
  - sessionsAcl:
      actions:
      - CREATE
      scope:
        all: {}
  - dataModelInstancesAcl:
      actions:
      - READ
      - WRITE
      - WRITE_PROPERTIES
      scope:
        spaceIdScope:
          spaceIds:
          - springfield_instances
  - dataModelsAcl:
      actions:
      - READ
      scope:
        spaceIdScope:
          spaceIds:
          - cdf_cdm
  metadata:
    origin: cognite-toolkit
  name: gp_transformations_timeseries_to_equipment
  sourceId: <not set>
Transformation:
- conflictMode: upsert
  dataSetId: 42
  destination:
    instanceSpace: springfield_instances
    type: nodes
    view:
      externalId: CogniteTimeSeries
      space: cdf_cdm
      version: v1
  destinationOidcCredentials:
    audience: https://bluefield.cognitedata.com
    cdfProjectName: pytest-project
    clientId: ${TRANSFORMATIONS_CLIENT_ID}
    clientSecret: ${TRANSFORMATIONS_CLIENT_SECRET}
    scopes: https://bluefield.cognitedata.com/.default
    tokenUri: dummy
  externalId: timeseries_to_equipment
  ignoreNullFields: true
  isPublic: true
  name: TimeSeries to equipment Connection Transformation
  query: "select\n  /* three first properties are required */\n  cast(timeseries.`externalId`\
    \ as STRING) as externalId, \n  cast(timeseries.`isStep` as BOOLEAN) as isStep,\n\
    \  cast(timeseries.`type` as STRING) as type,\n  /* direct relation */\n  array(\n\
    \    node_reference(\n      'springfield_instances',\n      equipment_lookup.`externalId`\n\
    \    )\n  ) as equipment\nfrom\n  cdf_data_models(\n    \"cdf_idm\",\n    \"CogniteProcessIndustries\"\
    ,\n    \"v1\",\n    \"CogniteTimeSeries\"\n  ) as timeseries\nleft join cdf_data_models(\n\
    \    \"cdf_idm\",\n    \"CogniteProcessIndustries\",\n    \"v1\",\n    \"CogniteEquipment\"\
    \n  ) as equipment_lookup \n  /* update to the correct matching criteria for your\
    \ data */\n  on substring_index(replace(timeseries.`name`, 'VAL_', ''), ':', 1)\
    \ == equipment_lookup.`name`\nwhere\n  timeseries.space == 'springfield_instances'\n"
  sourceOidcCredentials:
    audience: https://bluefield.cognitedata.com
    cdfProjectName: pytest-project
    clientId: ${TRANSFORMATIONS_CLIENT_ID}
    clientSecret: ${TRANSFORMATIONS_CLIENT_SECRET}
    scopes: https://bluefield.cognitedata.com/.default
    tokenUri: dummy
